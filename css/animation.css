@charset "UTF-8";

:root {
  --animation-transform: none;
  --animation-duration: none;
  --animation-duration-shadow: none;
  --animation-duration-symmetry: none;
  --animation-origin: 0 0;
  --animation-axis-1: 1;
  --animation-axis-2: 1.5;
  --animation-axis-4: 1;
}

/* blocks moving animation */
.animation-block {
  animation: animation-block cubic-bezier(0.22, 0.61, 0.36, 1) forwards;
  animation-duration: var(--animation-duration);
}

@keyframes animation-block {
  0% {
    transform: var(--animation-transform);
  }

  100% {
    transform: translate(0, 0);
  }
}

.animation-shadow {
  animation: animation-shadow linear forwards;
  animation-duration: var(--animation-duration-shadow);
}

@keyframes animation-shadow {
  0% {
    opacity: 0.5;
  }

  30% {
    opacity: 0.3;
  }

  100% {
    opacity: 0;
  }
}

/* 左右に振動させる */
.animation-illegal-move-lr {
  transform-origin: center;
  animation: animation-illegal-move-lr linear;
  animation-duration: var(--animation-duration);
}

@keyframes animation-illegal-move-lr {
  0%,
  50%,
  100% {
    transform: translate(0, -50%) scaleX(1);
  }

  25%,
  75% {
    transform: translate(0, -50%) scaleX(1.02);
  }
}

/* 上下に振動させる */
.animation-illegal-move-ud {
  transform-origin: center;
  animation: animation-illegal-move-ud linear;
  animation-duration: var(--animation-duration);
}

@keyframes animation-illegal-move-ud {
  0%,
  50%,
  100% {
    transform: translate(0, -50%) scaleY(1);
  }

  25%,
  75% {
    transform: translate(0, -50%) scaleY(1.02);
  }
}

/* blocks completed animation */
.animation-axis-line1 {
  transform-origin: var(--animation-origin);
  animation: animation-axis-line1 linear forwards;
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-1)
  );
}

@keyframes animation-axis-line1 {
  0%,
  100% {
    transform: scaleX(1);
  }

  30%,
  70% {
    transform: scaleX(-1);
  }
}

.animation-axis-line2 {
  transform-origin: var(--animation-origin);
  animation: animation-axis-line2 linear forwards;
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-1)
  );
}

@keyframes animation-axis-line2 {
  0%,
  100% {
    transform: scaleY(1);
  }

  30%,
  70% {
    transform: scaleY(-1);
  }
}

.animation-axis-line3 {
  transform-origin: var(--animation-origin);
  animation: animation-axis-line3 linear forwards;
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-1)
  );
}

@keyframes animation-axis-line3 {
  0%,
  100% {
    transform: rotate3d(1, 1, 0, 0deg);
  }

  30%,
  70% {
    transform: rotate3d(1, 1, 0, 180deg);
  }
}

.animation-axis-line4 {
  transform-origin: var(--animation-origin);
  animation: animation-axis-line4 linear forwards;
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-1)
  );
}

@keyframes animation-axis-line4 {
  0%,
  100% {
    transform: rotate3d(1, -1, 0, 0deg);
  }

  30%,
  70% {
    transform: rotate3d(1, -1, 0, 180deg);
  }
}

.animation-axis-plus1 {
  transform-origin: var(--animation-origin);
  animation: animation-axis-plus1 linear forwards;
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-2) * 2
  );
}

@keyframes animation-axis-plus1 {
  0%,
  40%,
  50%,
  90%,
  100% {
    transform: scaleX(1) scaleY(1);
  }

  15%,
  25% {
    transform: scaleX(-1) scaleY(1);
  }

  65%,
  75% {
    transform: scaleX(1) scaleY(-1);
  }
}

.animation-axis-plus2 {
  transform-origin: var(--animation-origin);
  animation: animation-axis-plus2 linear forwards;
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-2) * 2
  );
}

@keyframes animation-axis-plus2 {
  0%,
  40%,
  50%,
  90%,
  100% {
    transform: rotate3d(1, 1, 0, 0deg) rotate3d(1, -1, 0, 0deg);
  }

  15%,
  25% {
    transform: rotate3d(1, 1, 0, 180deg) rotate3d(1, -1, 0, 0deg);
  }

  65%,
  75% {
    transform: rotate3d(1, 1, 0, 0deg) rotate3d(1, -1, 0, 180deg);
  }
}

.animation-axis-plus3 {
  transform-origin: var(--animation-origin);
  animation: animation-axis-plus3 linear forwards;
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-4) * 4
  );
}

@keyframes animation-axis-plus3 {
  0%,
  90%,
  100% {
    transform: scaleX(1) scaleY(1);
  }

  15%,
  25% {
    transform: rotate3d(0, 1, 0, 180deg) rotate3d(1, 0, 0, 0deg)
      rotate3d(1, 1, 0, 0deg);
  }

  40%,
  50% {
    transform: rotate3d(0, 1, 0, 180deg) rotate3d(1, 0, 0, 180deg)
      rotate3d(1, 1, 0, 0deg);
  }

  65%,
  75% {
    transform: rotate3d(0, 1, 0, 180deg) rotate3d(1, 0, 0, 180deg)
      rotate3d(1, 1, 0, 180deg);
  }
}

.animation-axis-point1 {
  transform-origin: var(--animation-origin);
  animation: animation-axis-point1 linear forwards;
  animation-duration: var(--animation-duration-symmetry);
}

@keyframes animation-axis-point1 {
  0% {
    transform: rotate(0deg);
  }

  30%,
  70% {
    transform: rotate(180deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.animation-axis-point2 {
  transform-origin: var(--animation-origin);
  animation: animation-axis-point2 linear forwards;
  animation-duration: calc(var(--animation-duration-symmetry) * 2);
}

@keyframes animation-axis-point2 {
  0% {
    transform: rotate(0deg);
  }

  10%,
  25% {
    transform: rotate(90deg);
  }

  35%,
  50% {
    transform: rotate(180deg);
  }

  60%,
  75% {
    transform: rotate(270deg);
  }

  85%,
  100% {
    transform: rotate(360deg);
  }
}

@keyframes animation-axis-4mm {
  0%,
  90%,
  100% {
    transform: scaleX(1) scaleY(1);
  }

  15%,
  25% {
    transform: rotate3d(0, 1, 0, 180deg) rotate3d(1, 0, 0, 0deg)
      rotate3d(1, 1, 0, 0deg);
  }

  40%,
  50% {
    transform: rotate3d(0, 1, 0, 180deg) rotate3d(1, 0, 0, 180deg)
      rotate3d(1, 1, 0, 0deg);
  }

  65%,
  75% {
    transform: rotate3d(0, 1, 0, 180deg) rotate3d(1, 0, 0, 180deg)
      rotate3d(1, 1, 0, 0deg) rotate(90deg);
  }
}

.animation-symmetry-axis {
  animation: animation-symmetry-axis linear both;
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-1)
  );
}

@keyframes animation-symmetry-axis {
  0% {
    opacity: 0;
  }

  20% {
    opacity: 1;
  }

  80% {
    opacity: 0.8;
  }

  100% {
    opacity: 0.4;
  }
}

.axis-2-1 {
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-2)
  );
  animation-delay: 0;
}

.axis-2-2 {
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-2)
  );
  animation-delay: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-2)
  );
}

.axis-4-1 {
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-4)
  );
  animation-delay: 0;
}

.axis-4-2 {
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-4)
  );
  animation-delay: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-4)
  );
}

.axis-4-3 {
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-4)
  );
  animation-delay: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-4) * 2
  );
}

.axis-4-4 {
  animation-duration: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-4)
  );
  animation-delay: calc(
    var(--animation-duration-symmetry) * var(--animation-axis-4) * 3
  );
}

/* 次のレベルへ */
#next-level:not(.hide) {
  animation: animation-next-level linear forwards;
  animation-duration: calc(var(--animation-duration-symmetry) * 2);
}

@keyframes animation-next-level {
  0%,
  80% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.animation-congratulations {
  animation: animation-congratulations ease-out both;
  animation-duration: calc(var(--animation-duration-symmetry) * 2);
}

@keyframes animation-congratulations {
  0%,
  20% {
    opacity: 0;
    transform: scale(0.8);
  }

  50%,
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

.animation-new-record {
  animation: animation-new-record linear both;
  animation-duration: calc(var(--animation-duration-symmetry) * 4);
}

@keyframes animation-new-record {
  0%,
  25% {
    opacity: 0;
    transform: scale(0.8);
  }

  55%,
  85% {
    opacity: 1;
    transform: scale(0.8);
  }

  40%,
  70%,
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

/* icon animation */
.animation-icon-app {
  transform-origin: center;
  animation: animation-axis-4mm linear forwards;
  animation-duration: calc(var(--animation-duration-symmetry) * 2.5);
}

.animation-icon-point {
  transform-origin: center;
  animation: animation-axis-point1 linear forwards;
  animation-duration: var(--animation-duration-symmetry);
}

.animation-icon-line {
  transform-origin: center;
  animation: animation-axis-line1 linear forwards;
  animation-duration: var(--animation-duration-symmetry);
}
